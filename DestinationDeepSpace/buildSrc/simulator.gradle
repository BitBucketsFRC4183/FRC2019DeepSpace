ext {
    gdxVersion = '1.9.5'
}

configurations {
    native3rdPartyDeps
    testCompile.extendsFrom(native3rdPartyDeps)
}


dependencies {
    testCompile "com.snobot.simulator:snobot_sim_gui:${snobotSim.snobotSimVersion}"
    testCompile "com.snobot.simulator:snobot_sim_java:${snobotSim.snobotSimVersion}"
    testCompile "com.snobot.simulator:snobot_sim_utilities:${snobotSim.snobotSimVersion}"
    testCompile "com.snobot.simulator:adx_family:${snobotSim.snobotSimVersion}"
    testCompile "com.snobot.simulator:navx_simulator:${snobotSim.snobotSimVersion}"
    testCompile "com.snobot.simulator:ctre_sim_override:${snobotSim.snobotSimCtreVersion}"
    testCompile "jfree:jfreechart:${snobotSim.jfreechart}"
    testCompile "org.apache.logging.log4j:log4j-core:${snobotSim.log4j}"
    testCompile "org.yaml:snakeyaml:${snobotSim.snakeyaml}"
    testCompile "com.miglayout:miglayout-swing:${snobotSim.miglayout}"
    testCompile "net.java.jinput:jinput:${snobotSim.jinput}"
    testCompile 'org.apache.commons:commons-lang3:3.0'

    native3rdPartyDeps  'net.java.jinput:jinput:2.0.7'

    testCompile "org.slf4j:slf4j-simple:1.7.25"
    testCompile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    testCompile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    testCompile "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
    testCompile "com.badlogicgames.gdx:gdx-controllers-platform:$gdxVersion:natives-desktop"

}

task unzipNativeLibraries(type: Copy) {

    configurations.native3rdPartyDeps.each {
        from zipTree(it)
        include "**/*.jnilib"
    }

    includeEmptyDirs = false

    destinationDir = new File("build/tmp/snobotSimJava")

}

build.shouldRunAfter(unzipNativeLibraries)

